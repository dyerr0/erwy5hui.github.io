body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-color: #123;
    color: #E0E0E0;
    margin: 0;
    padding: 2px;
    text-align: center;
}

h1 {
    font-weight: 300;
    margin-top: 15px;
    color: #ffffff;
}

.board {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 50px;
}

.connector {
    position: relative;
    width: 850px; /* Ajusta según sea necesario */
    /* height: 230px; */ /* Ajusta según sea necesario */
    margin: 0px auto; /* Centra el conector */
    background-color: #012;
    border-radius: 12px;
    overflow: hidden; /* Asegura que la imagen no se salga del contenedor */
}

.connector-image {
    position: revert-layer;
    width: 100%;
    height: 100%;
    object-fit: contain; /* Ajusta la imagen dentro del contenedor sin perder la proporción */
    z-index: 1;
}

/* Cavidades rectangulares con ajuste manual de altura, ancho y rotación */
.connector .cavity {
    position: absolute;
    width: var(--cavity-width, 80px); /* Ancho personalizado */
    height: var(--cavity-height, 50px); /* Alto personalizado */
    background-color: rgba(255, 255, 255, 0); /* Fondo transparente */
    border: 2px solid #616161; /* Borde gris */
    border-radius: 0; /* Sin bordes redondeados */
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    font-size: calc(min(var(--cavity-width), var(--cavity-height))); /* Escala la letra al tamaño completo del lado menor */
    color: #000;
    cursor: pointer;
    z-index: 2;
    transform: rotate(var(--cavity-rotation, 0deg)); /* Rotación ajustable */
    transition: transform 0.3s;
}

/* Animación en el fondo cuando algo está asignado a la cavidad */
.connector .cavity.assigned {
    background: radial-gradient(circle, rgba(255, 223, 0, 0.6) 10%, rgba(255, 255, 255, 0) 70%);
    animation: assignedGlow 2s infinite;
}

/* Definir la animación */
@keyframes assignedGlow {
    0% {
        background-size: 100% 100%;
    }
    50% {
        background-size: 120% 120%;
    }
    100% {
        background-size: 100% 100%;
    }
}

.connector .cavity:hover {
    transform: scale(1.1) rotate(var(--cavity-rotation, 0deg)); /* Mantener la rotación al ampliar */
}


/* Ajustes para las cavidades rectangulares */
.cavity {
    width: var(--cavity-width, 80px); /* Ancho personalizado */
    height: var(--cavity-height, 50px); /* Alto personalizado */
    border: 2px solid #000; /* Borde negro */
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    box-sizing: border-box; /* Evitar que el borde cambie las dimensiones */
    background-color: rgba(255, 255, 255, 0.8); /* Fondo blanco semitransparente */
    transition: transform 0.3s;
    border-radius: 0; /* Asegurarse de que NO tenga bordes redondeados */
}

/* El contenido asignado dentro de la cavidad (letra) siempre centrado y ahora con colores invertidos */
.cavity div {
    display: flex;
    align-items: center;
    justify-content: center;
    width: calc(min(var(--cavity-width), var(--cavity-height))); /* Mantener el ancho como el lado menor */
    height: calc(min(var(--cavity-width), var(--cavity-height))); /* Mantener la altura como el lado menor */
    font-size: calc(min(var(--cavity-width), var(--cavity-height)) * 0.9); /* Escalar el texto al 90% del tamaño más pequeño */
    background-color: black; /* Fondo negro */
    color: white; /* Texto en blanco */
    border: 1px solid #000; /* Borde negro */
    text-align: center;
    font-weight: bold;
    border-radius: 0; /* Sin bordes redondeados */
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); /* Centrar completamente el contenido */
}


.cavity:hover {
    transform: scale(1.05) rotate(var(--cavity-rotation, 0deg)); /* Mantiene la rotación al agrandar */
}

/* Ajuste de las posiciones de las cavidades basado en la nueva imagen centrada */
.connector .cavity:nth-child(1) {
    top: 160px;
    left: 60px;
}

.connector .cavity:nth-child(2) {
    top: 32px;
    left: 41px;
    rotate: 16deg;
    width: 45px;
    height: 17px;
}

.connector .cavity:nth-child(3) {
    top: 39px;
    left: 84px;
    height: 20px;
    width: 20px;
    rotate: 16deg;
}

.connector .cavity:nth-child(4) {
    top: 73px;
    left: 60px;
    height: 17px;
    width: 43px;
    rotate: -69deg;
}

.connector .cavity:nth-child(5) {
    top: 85px;
    left: 102px;
    rotate: 12.3deg;
    height: 17px;
    width: 400px;
}

.connector .cavity:nth-child(6) {
    top: 129px;
    left: 500px;
    height: 20px;
    width: 30px;
}

.connector .cavity:nth-child(7) {
    top: 86px;
    left: 505px;
    width: 72px;
    height: 17px;
    rotate: -64deg;
}

.connector .cavity:nth-child(8) {
    top: 173px;
    left: 335px;
    height: 17px;
    width: 170px;
    rotate: -22deg;
}

.connector .cavity:nth-child(9) {
    top: 207px;
    left: 318px;
    height: 20px;
    width: 20px;
}

.connector .cavity:nth-child(10) {
    top: 181px;
    left: 295px;
    width: 35px;
    height: 17px;
    rotate: 60deg;
}

.connector .cavity:nth-child(11) {
    top: 241px;
    left: 194px;
    rotate: -24deg;
    height: 17px;
    width: 128px;
}

.connector .cavity:nth-child(12) {
    top: 247px;
    left: 293px;
    rotate: -73deg;
    width: 50px;
    height: 17px;
}

.connector .cavity:nth-child(13) {
    top: 132px;
    left: 534px;
    height: 17px;
    width: 73px;
}

.connector .cavity:nth-child(14) {
    top: 130px;
    left: 608px;
    height: 20px;
    width: 20px;
}

.connector .cavity:nth-child(15) {
    top: 206px;
    left: 578px;
    height: 17px;
    width: 130px;
    rotate: 68deg;
}

.connector .cavity:nth-child(16) {
    top: 132px;
    left: 629px;
    height: 17px;
    width: 93px;
}

.connector .cavity:nth-child(17) {
    top: 130px;
    left: 723px;
    width: 20px;
    height: 20px;
}

.connector .cavity:nth-child(18) {
    top: 213px;
    left: 662px;
    height: 17px;
    width: 140px;
    rotate: 90deg;
}

.connector .cavity:nth-child(19) {
    top: 229px;
    left: 642px;
    height: 17px;
    width: 100px;
    rotate: 64deg;
}

.connector .cavity:nth-child(20) {
    top: 201px;
    left: 673px;
    width: 75px;
    height: 17px;
    rotate: 80deg;
}

.connector .cavity:nth-child(21) {
    top: 228px;
    left: 741px;
    height: 17px;
    width: 58px;
}

.connector .cavity:nth-child(22) {
    top: 257px;
    left: 758px;
    rotate: 27deg;
    height: 17px;
    width: 58px;
}

.connector .cavity:nth-child(23) {
    top: 308px;
    left: 716px;
    height: 17px;
    width: 22px;
}

.connector .cavity:nth-child(24) {
    top: 307px;
    left: 739px;
    width: 55px;
    height: 17px;
}

.connector .cavity:nth-child(25) {
    top: 308px;
    left: 584px;
    height: 17px;
    width: 130px;
}

.connector .cavity:nth-child(26) {
    top: 308px;
    left: 546px;
    width: 37px;
    height: 17px;
}

.connector .cavity:nth-child(27) {
    top: 345px;
    left: 590px;
    rotate: 16deg;
    height: 17px;
    width: 161px;
}

.connector .cavity:nth-child(28) {
    top: 308px;
    left: 73px;
    height: 17px;
    width: 471px;
}




.step-timer {
    display: flex;
    align-items: center;
    margin-bottom: 20px; /* Ajusta el espacio debajo de esta sección si es necesario */
}

#step {
    font-size: 24px;
    font-weight: bold;
    color: #ffffff;
    margin-right: 10px; /* Espacio entre "Paso 1" y el temporizador */
}

.timer {
    font-size: 24px;
    font-weight: bold;
    color: #ffffff;
    background-color: #1976D2;
    padding: 10px;
    border-radius: 5px;
}

/* Modal de tiempo agotado */
.modal {
    display: none; /* Oculto por defecto */
    position: fixed;
    z-index: 1000; /* Aparece por encima de otros elementos */
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5); /* Fondo semi-transparente */
}

.modal-content {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: #123456;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);
    text-align: center;
}

.modal-content h2 {
    margin-top: 0;
}

/* Modal de tiempo agotado */
#timeout-modal .modal-content {
    background-color: crimson; /* Fondo de color crimson */
    color: white; /* Color del texto para mejor contraste */
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);
    text-align: center;
}

#timeout-modal .modal-content button {
    background-color: white;
    color: crimson;
    border: 2px solid crimson;
    margin: 10px;
    padding: 10px 20px;
    border-radius: 5px;
    cursor: pointer;
}

#timeout-modal .modal-content button:hover {
    background-color: crimson;
    color: white;
}

.modal-content button {
    margin: 10px;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
}

.modal-content button:hover {
    background-color: #ddd;
}

.cables-grid {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    gap: 10px;
    margin-top: -20px;
}

.cable-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.cable-square {
    width: 50px;
    height: 50px;
    background-color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 1px solid #000;
    position: relative;
    cursor: pointer;
    transition: border 0.3s;
}


/* Definición de la animación para el borde punteado */
@keyframes dash {
    0% {
        border-color: #1976D2;
        border-style: dashed;
        border-width: 2px;
        border-offset: 0;
    }
    100% {
        border-color: #1976D2;
        border-style: dashed;
        border-width: 2px;
        border-offset: 100%;
    }
}

@keyframes dash-animation {
    0% {
        background-position: 0 0;
    }
    100% {
        background-position: 100% 0;
    }
}

/* Borde punteado con animación de movimiento */
.cable-square.selected {
    border: 2px dashed black;
    background-image: linear-gradient(to right, black 33%, rgba(255, 255, 255, 0) 0%);
    background-position: 0 0;
    background-size: 10px 100%;
    animation: dash-animation 2s linear infinite;
    border-radius: 5px; /* Opcional, si deseas un borde más redondeado */
}


.cable-letter {
    font-size: 18px;
    font-weight: bold;
    color: #000;
}

.cable-description {
    margin-top: 5px;
    font-size: 14px;
    color: #BDBDBD;
    font-weight: bold;
}

.cable {
    width: 30px;
    height: 30px;
    cursor: pointer;
    transition: transform 0.3s;
}

.cable:hover {
    transform: scale(1.2);
}

.cable-id {
    margin-left: 10px;
    color: #BDBDBD;
    font-weight: bold;
}

#cable-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1; /* Asegura que las líneas estén detrás de los círculos y símbolos */
}

.cable-item .cable[data-id="DMY"] circle {
    fill: transparent; /* El círculo es transparente */
    stroke-width: 2px;
    stroke: black;
    stroke-dasharray: 4;
    pointer-events: all; /* Asegura que todo el área sea seleccionable */
}

.cable-delimiter {
    position: absolute;
    width: 40px;
    height: 40px;
    border: 2px solid #BDBDBD;
    border-radius: 50%;
    top: 0;
    left: 0;
}

/* Asegúrate de que los botones estén en la misma fila */
.button-container {
    display: flex;
    justify-content: center; /* Centra ambos botones */
    align-items: center;
    gap: 20px; /* Espacio entre los botones */
    margin-top: -20px; /* Ajuste de la distancia desde la parte superior */
}

/* Estilo del botón de evaluar */
.evaluate-button {
    padding: 10px 20px;
    background-color: #1976D2;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 16px;
}

.evaluate-button:hover {
    background-color: #145A8B;
}

/* Estilo del botón de siguiente paso */
.next-button {
    padding: 10px 20px;
    background-color: #28a745;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 16px;
}

.next-button:hover {
    background-color: #218838;
}

/* Otros estilos necesarios */
#result {
    margin-top: 20px;
    font-weight: bold;
    font-size: 1.2em;
}

#result {
    margin-top: -35px;
    font-weight: bold;
    font-size: 1.2em;
}

/* Animación de desvanecimiento */
.fade-in {
    animation: fadeIn 1s ease-in-out forwards;
}

.fade-out {
    animation: fadeOut 1s ease-in-out forwards;
}

@keyframes fadeIn {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

@keyframes fadeOut {
    0% {
        opacity: 1;
    }
    100% {
        opacity: 0;
    }
}

